#!/usr/bin/env bash

# http://stackoverflow.com/a/39398359/4582775

## As long as there is at least one more argument, keep looping
#while [[ $# -gt 0 ]]; do
#    key="$1"
#    case "$key" in
#        # This is a flag type option. Will catch either -f or --foo
#        -f|--foo)
#        FOO=1
#        ;;
#        # Also a flag type option. Will catch either -b or --bar
#        -b|--bar)
#        BAR=1
#        ;;
#        # This is an arg value type option. Will catch -o value or --output-file value
#        -o|--output-file)
#        shift # past the key and to the value
#        OUTPUTFILE="$1"
#        ;;
#        # This is an arg=value type option. Will catch -o=value or --output-file=value
#        -o=*|--output-file=*)
#        # No need to shift here since the value is part of the same string
#        OUTPUTFILE="${key#*=}"
#        ;;
#        *)
#        # Do whatever you want with extra options
#        echo "Unknown option '$key'"
#        ;;
#    esac
#    # Shift after checking all the cases to get the next option
#    shift
#done

# As long as there is at least one more argument, keep looping
while [[ $# -gt 0 ]]; do
    key="$1"
    case "$key" in
        # This is an arg value type option. Will catch -o value or --output-file value
        -c|--command)
        shift # past the key and to the value
        command="$1"
        ;;
        # This is an arg=value type option. Will catch -o=value or --output-file=value
        -c=*|--command=*)
        # No need to shift here since the value is part of the same string
        command="${key#*=}"
        ;;
        *)
        # Do whatever you want with extra options
        echo "Unknown option '$key'"
        ;;
    esac
    # Shift after checking all the cases to get the next option
    shift
done

if [ "$command" == "installdev" ]; then
    source ~/psono/psono-quickstart/.env
    mkdir -p ~/psono/config
    mkdir -p ~/psono/data/postgresql
    mkdir -p ~/psono/data/mail
    if [ ! -d "$HOME/psono/psono-server" ]; then
        git clone https://gitlab.com/psono/psono-server.git ~/psono/psono-server
    fi
    if [ ! -d "$HOME/psono/psono-client" ]; then
        git clone https://gitlab.com/psono/psono-client.git ~/psono/psono-client
    fi
    cp -n ~/psono/psono-server/configs/mainconfig/settings.yaml ~/psono/config/settings.yaml

    cat > ~/psono/config/config.json <<- "EOF"
{
  "backend_servers": [{
    "title": "Demo",
    "url": "PSONO_URL:PSONO_EXTERNAL_PORT/server"
  }],
  "base_url": "PSONO_URL:PSONO_EXTERNAL_PORT/",
  "allow_custom_server": true,
  "default_username": "demo@PSONO_DOMAIN",
  "default_password": "demo"
}
EOF
    sed -i'' -e "s,PSONO_DOMAIN,$PSONO_DOMAIN,g" ~/psono/config/config.json
    sed -i'' -e "s,PSONO_URL,$PSONO_URL,g" ~/psono/config/config.json
    sed -i'' -e "s,PSONO_EXTERNAL_PORT,$PSONO_EXTERNAL_PORT,g" ~/psono/config/config.json
    sed -i'' -e "s,HOST_URL: 'http://example.com',HOST_URL: 'http://$PSONO_URL:$PSONO_EXTERNAL_PORT/server',g" ~/psono/config/settings.yaml
    sed -i'' -e "s,ALLOWED_DOMAINS: ['example.com'],ALLOWED_DOMAINS: ['$PSONO_DOMAIN'],g" ~/psono/config/settings.yaml
    sed -i'' -e "s,EMAIL_HOST: 'localhost',EMAIL_HOST: 'mail',g" ~/psono/config/settings.yaml
    sed -i'' -e "s,YourPostgresDatabase,postgres,g" ~/psono/config/settings.yaml
    sed -i'' -e "s,YourPostgresUser,postgres,g" ~/psono/config/settings.yaml
    sed -i'' -e "s,YourPostgresPassword,$PSONO_POSTGRES_PASSWORD,g" ~/psono/config/settings.yaml
    sed -i'' -e "s,YourPostgresHost,postgres,g" ~/psono/config/settings.yaml
    sed -i'' -e "s,YourPostgresPort,5432,g" ~/psono/config/settings.yaml
    sed -i'' -e "s,path/to/psono-server,root,g" ~/psono/config/settings.yaml

    docker build -t psono-proxy ~/psono/psono-quickstart
#    docker pull psono/psono-server:latest
#    docker run --rm \
#          -v ~/psono/config/settings.yaml:/root/.psono_server/settings.yaml \
#          -ti psono/psono-server:latest password_manager_server/manage.py createuser demo@$PSONO_DOMAIN demo demo@example.com

else
	echo "unknown command: $command" >&2
	exit 1
fi

