server {
    listen 80;
    listen [::]:80;

    server_name staging.mancelot.app;

    include /etc/nginx/apps/certbot.conf;
    include /etc/nginx/apps/cloudflare.conf;

    location / {
        include /etc/nginx/conf.d/security.conf;
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name staging.mancelot.app;
    root /var/www/staging/root;

    ssl_certificate /etc/letsencrypt/live/staging.mancelot.app/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/staging.mancelot.app/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    include /etc/nginx/apps/certbot.conf;
    include /etc/nginx/apps/cloudflare.conf;

    location /static {
        include /etc/nginx/apps/cache-static.conf;
        include /etc/nginx/conf.d/security.conf;

        alias /var/www/staging/static;
        try_files $uri @backend;
    }

    location / {
        # Send appropriate headers through
        proxy_set_header X-Forwarded-Ssl on;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
        proxy_set_header X-Frame-Options SAMEORIGIN;

        # Point nginx to the backend
        include /etc/nginx/conf.d/security.conf;
        include /etc/nginx/uwsgi_params;
        resolver 127.0.0.11 valid=30s;
        set $upstream staging:1337;
        uwsgi_pass $upstream;
    }
}
