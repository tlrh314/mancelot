server {
    listen 80 default_server;
    listen [::]:80 default_server;

    server_name mancelot.app www.mancelot.app;

    include /etc/nginx/apps/certbot.conf;
    include /etc/nginx/apps/cloudflare.conf;

    location / {
        include /etc/nginx/conf.d/security.conf;
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;

    server_name mancelot.app www.mancelot.app;
    root /var/www/mancelot/root;

    ssl_certificate /etc/letsencrypt/live/mancelot.app/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mancelot.app/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    include /etc/nginx/apps/certbot.conf;
    include /etc/nginx/apps/cloudflare.conf;

    location /flower-internal/ {
        internal;

        resolver 127.0.0.11 valid=30s;
        resolver_timeout 3s;
        set $flower celery_flower:5555;

        rewrite ^/flower-internal/(.*)$ /$1 break;
        sub_filter '="/' '="/flower/';
        sub_filter_types application/javascript;  # by default, sub_filter won't touch JS
        sub_filter_last_modified on;
        sub_filter_once off;

        include /etc/nginx/mime.types;
        include /etc/nginx/conf.d/security.conf;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;  # allow websockets
        proxy_set_header Connection "Upgrade";
        proxy_set_header X-Forwarded-For $remote_addr;  # preserve client IP
        proxy_set_header Host $host;
        proxy_pass http://$flower;
    }

    location /static {
        include /etc/nginx/apps/cache-static.conf;
        include /etc/nginx/conf.d/security.conf;

        alias /var/www/mancelot/static;
        try_files $uri @backend;
    }

    location / {
        # Send appropriate headers through
        proxy_set_header X-Forwarded-Ssl on;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
        proxy_set_header X-Frame-Options SAMEORIGIN;

        # Point nginx to the backend
        include /etc/nginx/conf.d/security.conf;
        include /etc/nginx/uwsgi_params;
        resolver 127.0.0.11 valid=30s;
        set $upstream django:1337;
        uwsgi_pass $upstream;
    }
}
